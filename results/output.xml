<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.1 on win32)" generated="20210207 22:18:22.527" rpa="false">
<suite id="s1" name="BancoDados" source="C:\Users\amanda.barreto\Desktop\robot\db\BancoDados.robot">
<test id="s1-t1" name="Exemplo1: executando scripts SQL via arquivo">
<kw name="Conectar ao Banco de Dados" type="setup">
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<arguments>
<arg>pymysql</arg>
<arg>${dbname}</arg>
<arg>${dbuser}</arg>
<arg>${dbpasswd}</arg>
<arg>${dbhost}</arg>
<arg>${dbport}</arg>
</arguments>
<msg timestamp="20210207 22:18:22.612" level="INFO">Connecting using : pymysql.connect(db=robot, user=root, passwd=, host=localhost, port=3306, charset=None) </msg>
<status status="PASS" starttime="20210207 22:18:22.583" endtime="20210207 22:18:22.625"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.583" endtime="20210207 22:18:22.626"></status>
</kw>
<kw name="Executar script via arquivo no banco de dados">
<arguments>
<arg>C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/create_table.sql</arg>
</arguments>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>sqlScriptFileName=${FILE}</arg>
</arguments>
<msg timestamp="20210207 22:18:22.628" level="INFO">Executing : Execute SQL Script  |  C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/create_table.sql </msg>
<status status="PASS" starttime="20210207 22:18:22.627" endtime="20210207 22:18:22.648"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.626" endtime="20210207 22:18:22.649"></status>
</kw>
<kw name="Executar script via arquivo no banco de dados">
<arguments>
<arg>C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/insert.sql</arg>
</arguments>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>sqlScriptFileName=${FILE}</arg>
</arguments>
<msg timestamp="20210207 22:18:22.651" level="INFO">Executing : Execute SQL Script  |  C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/insert.sql </msg>
<status status="PASS" starttime="20210207 22:18:22.650" endtime="20210207 22:18:22.657"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.649" endtime="20210207 22:18:22.657"></status>
</kw>
<kw name="Confere se &quot;teste&quot; foi inserido com sucesso">
<kw name="Check If Exists In Database" library="DatabaseLibrary">
<doc>Check if any row would be returned by given the input `selectStatement`. If there are no results, then this will
throw an AssertionError. Set optional input `sansTran` to True to run command without an explicit transaction
commit or rollback.</doc>
<arguments>
<arg>selectStatement=SELECT user_Name FROM account WHERE user_Name = '${USER}'</arg>
</arguments>
<msg timestamp="20210207 22:18:22.659" level="INFO">Executing : Check If Exists In Database  |  SELECT user_Name FROM account WHERE user_Name = 'teste' </msg>
<msg timestamp="20210207 22:18:22.659" level="INFO">Executing : Query  |  SELECT user_Name FROM account WHERE user_Name = 'teste' </msg>
<status status="PASS" starttime="20210207 22:18:22.658" endtime="20210207 22:18:22.659"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.658" endtime="20210207 22:18:22.660"></status>
</kw>
<kw name="Executar script via arquivo no banco de dados">
<arguments>
<arg>C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/update.sql</arg>
</arguments>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>sqlScriptFileName=${FILE}</arg>
</arguments>
<msg timestamp="20210207 22:18:22.661" level="INFO">Executing : Execute SQL Script  |  C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/update.sql </msg>
<status status="PASS" starttime="20210207 22:18:22.660" endtime="20210207 22:18:22.664"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.660" endtime="20210207 22:18:22.664"></status>
</kw>
<kw name="Executar script via arquivo no banco de dados">
<arguments>
<arg>C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/delete.sql</arg>
</arguments>
<kw name="Execute Sql Script" library="DatabaseLibrary">
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<arguments>
<arg>sqlScriptFileName=${FILE}</arg>
</arguments>
<msg timestamp="20210207 22:18:22.665" level="INFO">Executing : Execute SQL Script  |  C:/Users/amanda.barreto/Desktop/robot/db/mysqlScripts/delete.sql </msg>
<status status="PASS" starttime="20210207 22:18:22.664" endtime="20210207 22:18:22.668"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.664" endtime="20210207 22:18:22.669"></status>
</kw>
<kw name="Desconectar do Banco de Dados" type="teardown">
<kw name="Disconnect From Database" library="DatabaseLibrary">
<doc>Disconnects from the database.</doc>
<msg timestamp="20210207 22:18:22.670" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20210207 22:18:22.670" endtime="20210207 22:18:22.670"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.669" endtime="20210207 22:18:22.670"></status>
</kw>
<status status="PASS" starttime="20210207 22:18:22.582" endtime="20210207 22:18:22.671" critical="yes"></status>
</test>
<doc>Instalação DatabaseLibrary
pip install -U robotframework-databaselibrary
Instalação Driver MySQL
pip install PyMySQL</doc>
<status status="PASS" starttime="20210207 22:18:22.536" endtime="20210207 22:18:22.672"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="BancoDados">BancoDados</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
